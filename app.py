import streamlit as st
from modules.consumption import HouseholdConsumption
from modules.pv_production import PVSystem
from modules.economics import FinancialAnalysis
from config import TARIFFS, DEFAULT_APPLIANCES

# Section donn√©es m√©t√©o

def get_weather_params():
    st.sidebar.header("üå§Ô∏è Donn√©es M√©t√©o")
    
    # 1. Localisation
    mode = st.sidebar.radio("Mode de localisation", ["Adresse", "Coordonn√©es"])
    if mode == "Adresse":
        address = st.sidebar.text_input("Adresse compl√®te")
        lat, lon = geocode(address)  # √Ä impl√©menter
    else:
        lat = st.sidebar.number_input("Latitude", value=48.85)
        lon = st.sidebar.number_input("Longitude", value=2.35)
    
    # 2. Type de donn√©es
    data_type = st.sidebar.selectbox(
        "Source m√©t√©o",
        ["Historique (PVGIS)", "Pr√©visions (OpenWeatherMap)"]
    )
    
    # 3. Param√®tres avanc√©s
    with st.sidebar.expander("‚öôÔ∏è Options avanc√©es"):
        if data_type == "Historique":
            year = st.selectbox("Ann√©e de r√©f√©rence", range(2005, 2024), index=18)
        resolution = st.radio("R√©solution", ["Horaire", "Quotidienne"])
    
    return {
        "lat": lat,
        "lon": lon,
        "data_type": data_type,
        "year": year if data_type == "Historique" else None,
        "resolution": resolution
    }

def main():
    
# Int√©gration des donn√©es m√©t√©o
    weather_params = get_weather_params()
    pv_data = PVSimulator(weather_params).fetch_production_data()

    # Configuration de la page
    st.set_page_config(
        page_title="Simulateur Solaire Intelligent",
        layout="wide",
        page_icon="‚òÄÔ∏è"
    )
    
    # Sidebar pour les entr√©es utilisateur
    with st.sidebar:
        st.header("Param√®tres du Projet")
        location = get_location_input()
        household = get_household_input()
    
    # Onglets principaux
    tab1, tab2, tab3 = st.tabs(["Consommation", "Production PV", "Rentabilit√©"])
    
    with tab1:
        consumption = HouseholdConsumption(household).calculate()
        display_consumption(consumption)
    
    with tab2:
        pv_system = PVSystem(location, household).calculate()
        display_production(pv_system)
    
    with tab3:
        analysis = FinancialAnalysis(consumption, pv_system, TARIFFS).analyze()
        display_economics(analysis)

def get_location_input():
    """R√©cup√®re la localisation via coordonn√©es ou code postal."""
    # ... (votre code existant adapt√©)
    return {"latitude": lat, "longitude": lon}

if __name__ == "__main__":
    main()
